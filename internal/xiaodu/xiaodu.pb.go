// Code generated by protoc-gen-go.
// source: xiaodu.proto
// DO NOT EDIT!

package xiaodu

import proto "github.com/golang/protobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type BidRequest_Imp_SlotType int32

const (
	BidRequest_Imp_SLOT_FIXED        BidRequest_Imp_SlotType = 0
	BidRequest_Imp_SLOT_STARTUP      BidRequest_Imp_SlotType = 1
	BidRequest_Imp_SLOT_INTERSTITIAL BidRequest_Imp_SlotType = 2
	BidRequest_Imp_SLOT_FLOATING     BidRequest_Imp_SlotType = 3
	BidRequest_Imp_SLOT_VIDEO        BidRequest_Imp_SlotType = 4
	BidRequest_Imp_SLOT_NATIVE       BidRequest_Imp_SlotType = 5
)

var BidRequest_Imp_SlotType_name = map[int32]string{
	0: "SLOT_FIXED",
	1: "SLOT_STARTUP",
	2: "SLOT_INTERSTITIAL",
	3: "SLOT_FLOATING",
	4: "SLOT_VIDEO",
	5: "SLOT_NATIVE",
}
var BidRequest_Imp_SlotType_value = map[string]int32{
	"SLOT_FIXED":        0,
	"SLOT_STARTUP":      1,
	"SLOT_INTERSTITIAL": 2,
	"SLOT_FLOATING":     3,
	"SLOT_VIDEO":        4,
	"SLOT_NATIVE":       5,
}

func (x BidRequest_Imp_SlotType) Enum() *BidRequest_Imp_SlotType {
	p := new(BidRequest_Imp_SlotType)
	*p = x
	return p
}
func (x BidRequest_Imp_SlotType) String() string {
	return proto.EnumName(BidRequest_Imp_SlotType_name, int32(x))
}
func (x *BidRequest_Imp_SlotType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Imp_SlotType_value, data, "BidRequest_Imp_SlotType")
	if err != nil {
		return err
	}
	*x = BidRequest_Imp_SlotType(value)
	return nil
}

type BidRequest_Imp_BidInfo_BidType int32

const (
	BidRequest_Imp_BidInfo_BID_TYPE_CPM BidRequest_Imp_BidInfo_BidType = 0
	BidRequest_Imp_BidInfo_BID_TYPE_CPC BidRequest_Imp_BidInfo_BidType = 1
	BidRequest_Imp_BidInfo_BID_TYPE_CPD BidRequest_Imp_BidInfo_BidType = 2
	BidRequest_Imp_BidInfo_BID_TYPE_CPT BidRequest_Imp_BidInfo_BidType = 3
)

var BidRequest_Imp_BidInfo_BidType_name = map[int32]string{
	0: "BID_TYPE_CPM",
	1: "BID_TYPE_CPC",
	2: "BID_TYPE_CPD",
	3: "BID_TYPE_CPT",
}
var BidRequest_Imp_BidInfo_BidType_value = map[string]int32{
	"BID_TYPE_CPM": 0,
	"BID_TYPE_CPC": 1,
	"BID_TYPE_CPD": 2,
	"BID_TYPE_CPT": 3,
}

func (x BidRequest_Imp_BidInfo_BidType) Enum() *BidRequest_Imp_BidInfo_BidType {
	p := new(BidRequest_Imp_BidInfo_BidType)
	*p = x
	return p
}
func (x BidRequest_Imp_BidInfo_BidType) String() string {
	return proto.EnumName(BidRequest_Imp_BidInfo_BidType_name, int32(x))
}
func (x *BidRequest_Imp_BidInfo_BidType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Imp_BidInfo_BidType_value, data, "BidRequest_Imp_BidInfo_BidType")
	if err != nil {
		return err
	}
	*x = BidRequest_Imp_BidInfo_BidType(value)
	return nil
}

type BidRequest_Imp_Banner_SlotType int32

const (
	BidRequest_Imp_Banner_SLOT_FIXED        BidRequest_Imp_Banner_SlotType = 0
	BidRequest_Imp_Banner_SLOT_STARTUP      BidRequest_Imp_Banner_SlotType = 1
	BidRequest_Imp_Banner_SLOT_INTERSTITIAL BidRequest_Imp_Banner_SlotType = 2
	BidRequest_Imp_Banner_SLOT_FLOATING     BidRequest_Imp_Banner_SlotType = 3
	BidRequest_Imp_Banner_SLOT_VIDEO        BidRequest_Imp_Banner_SlotType = 4
	BidRequest_Imp_Banner_SLOT_NATIVE       BidRequest_Imp_Banner_SlotType = 5
)

var BidRequest_Imp_Banner_SlotType_name = map[int32]string{
	0: "SLOT_FIXED",
	1: "SLOT_STARTUP",
	2: "SLOT_INTERSTITIAL",
	3: "SLOT_FLOATING",
	4: "SLOT_VIDEO",
	5: "SLOT_NATIVE",
}
var BidRequest_Imp_Banner_SlotType_value = map[string]int32{
	"SLOT_FIXED":        0,
	"SLOT_STARTUP":      1,
	"SLOT_INTERSTITIAL": 2,
	"SLOT_FLOATING":     3,
	"SLOT_VIDEO":        4,
	"SLOT_NATIVE":       5,
}

func (x BidRequest_Imp_Banner_SlotType) Enum() *BidRequest_Imp_Banner_SlotType {
	p := new(BidRequest_Imp_Banner_SlotType)
	*p = x
	return p
}
func (x BidRequest_Imp_Banner_SlotType) String() string {
	return proto.EnumName(BidRequest_Imp_Banner_SlotType_name, int32(x))
}
func (x *BidRequest_Imp_Banner_SlotType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Imp_Banner_SlotType_value, data, "BidRequest_Imp_Banner_SlotType")
	if err != nil {
		return err
	}
	*x = BidRequest_Imp_Banner_SlotType(value)
	return nil
}

type BidRequest_Imp_Video_SlotType int32

const (
	BidRequest_Imp_Video_SLOT_FIXED        BidRequest_Imp_Video_SlotType = 0
	BidRequest_Imp_Video_SLOT_STARTUP      BidRequest_Imp_Video_SlotType = 1
	BidRequest_Imp_Video_SLOT_INTERSTITIAL BidRequest_Imp_Video_SlotType = 2
	BidRequest_Imp_Video_SLOT_FLOATING     BidRequest_Imp_Video_SlotType = 3
	BidRequest_Imp_Video_SLOT_VIDEO        BidRequest_Imp_Video_SlotType = 4
	BidRequest_Imp_Video_SLOT_NATIVE       BidRequest_Imp_Video_SlotType = 5
)

var BidRequest_Imp_Video_SlotType_name = map[int32]string{
	0: "SLOT_FIXED",
	1: "SLOT_STARTUP",
	2: "SLOT_INTERSTITIAL",
	3: "SLOT_FLOATING",
	4: "SLOT_VIDEO",
	5: "SLOT_NATIVE",
}
var BidRequest_Imp_Video_SlotType_value = map[string]int32{
	"SLOT_FIXED":        0,
	"SLOT_STARTUP":      1,
	"SLOT_INTERSTITIAL": 2,
	"SLOT_FLOATING":     3,
	"SLOT_VIDEO":        4,
	"SLOT_NATIVE":       5,
}

func (x BidRequest_Imp_Video_SlotType) Enum() *BidRequest_Imp_Video_SlotType {
	p := new(BidRequest_Imp_Video_SlotType)
	*p = x
	return p
}
func (x BidRequest_Imp_Video_SlotType) String() string {
	return proto.EnumName(BidRequest_Imp_Video_SlotType_name, int32(x))
}
func (x *BidRequest_Imp_Video_SlotType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Imp_Video_SlotType_value, data, "BidRequest_Imp_Video_SlotType")
	if err != nil {
		return err
	}
	*x = BidRequest_Imp_Video_SlotType(value)
	return nil
}

// The following table indicates the options for video linearity.
// "In-stream" or "linear" video refers to pre-roll, post-roll,
// or mid-roll video ads where the user is forced to watch ad in
// order to see the video content.
// "Overlay" or "non-linear" refer to ads that are shown on top
// of the video content.
type BidRequest_Imp_Video_VideoLinearity int32

const (
	BidRequest_Imp_Video_LINEAR     BidRequest_Imp_Video_VideoLinearity = 1
	BidRequest_Imp_Video_NON_LINEAR BidRequest_Imp_Video_VideoLinearity = 2
)

var BidRequest_Imp_Video_VideoLinearity_name = map[int32]string{
	1: "LINEAR",
	2: "NON_LINEAR",
}
var BidRequest_Imp_Video_VideoLinearity_value = map[string]int32{
	"LINEAR":     1,
	"NON_LINEAR": 2,
}

func (x BidRequest_Imp_Video_VideoLinearity) Enum() *BidRequest_Imp_Video_VideoLinearity {
	p := new(BidRequest_Imp_Video_VideoLinearity)
	*p = x
	return p
}
func (x BidRequest_Imp_Video_VideoLinearity) String() string {
	return proto.EnumName(BidRequest_Imp_Video_VideoLinearity_name, int32(x))
}
func (x *BidRequest_Imp_Video_VideoLinearity) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Imp_Video_VideoLinearity_value, data, "BidRequest_Imp_Video_VideoLinearity")
	if err != nil {
		return err
	}
	*x = BidRequest_Imp_Video_VideoLinearity(value)
	return nil
}

type BidRequest_Imp_Native_Asset_Image_ImageAssetType int32

const (
	BidRequest_Imp_Native_Asset_Image_ICON BidRequest_Imp_Native_Asset_Image_ImageAssetType = 1
	BidRequest_Imp_Native_Asset_Image_LOGO BidRequest_Imp_Native_Asset_Image_ImageAssetType = 2
	BidRequest_Imp_Native_Asset_Image_MAIN BidRequest_Imp_Native_Asset_Image_ImageAssetType = 3
)

var BidRequest_Imp_Native_Asset_Image_ImageAssetType_name = map[int32]string{
	1: "ICON",
	2: "LOGO",
	3: "MAIN",
}
var BidRequest_Imp_Native_Asset_Image_ImageAssetType_value = map[string]int32{
	"ICON": 1,
	"LOGO": 2,
	"MAIN": 3,
}

func (x BidRequest_Imp_Native_Asset_Image_ImageAssetType) Enum() *BidRequest_Imp_Native_Asset_Image_ImageAssetType {
	p := new(BidRequest_Imp_Native_Asset_Image_ImageAssetType)
	*p = x
	return p
}
func (x BidRequest_Imp_Native_Asset_Image_ImageAssetType) String() string {
	return proto.EnumName(BidRequest_Imp_Native_Asset_Image_ImageAssetType_name, int32(x))
}
func (x *BidRequest_Imp_Native_Asset_Image_ImageAssetType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Imp_Native_Asset_Image_ImageAssetType_value, data, "BidRequest_Imp_Native_Asset_Image_ImageAssetType")
	if err != nil {
		return err
	}
	*x = BidRequest_Imp_Native_Asset_Image_ImageAssetType(value)
	return nil
}

type BidRequest_Imp_Native_Asset_Data_DataAssetType int32

const (
	BidRequest_Imp_Native_Asset_Data_SPONSORED  BidRequest_Imp_Native_Asset_Data_DataAssetType = 1
	BidRequest_Imp_Native_Asset_Data_DESC       BidRequest_Imp_Native_Asset_Data_DataAssetType = 2
	BidRequest_Imp_Native_Asset_Data_RATING     BidRequest_Imp_Native_Asset_Data_DataAssetType = 3
	BidRequest_Imp_Native_Asset_Data_LIKES      BidRequest_Imp_Native_Asset_Data_DataAssetType = 4
	BidRequest_Imp_Native_Asset_Data_DOWNLOADS  BidRequest_Imp_Native_Asset_Data_DataAssetType = 5
	BidRequest_Imp_Native_Asset_Data_PRICE      BidRequest_Imp_Native_Asset_Data_DataAssetType = 6
	BidRequest_Imp_Native_Asset_Data_SALEPRICE  BidRequest_Imp_Native_Asset_Data_DataAssetType = 7
	BidRequest_Imp_Native_Asset_Data_PHONE      BidRequest_Imp_Native_Asset_Data_DataAssetType = 8
	BidRequest_Imp_Native_Asset_Data_ADDRESS    BidRequest_Imp_Native_Asset_Data_DataAssetType = 9
	BidRequest_Imp_Native_Asset_Data_DESC2      BidRequest_Imp_Native_Asset_Data_DataAssetType = 10
	BidRequest_Imp_Native_Asset_Data_DISPLAYURL BidRequest_Imp_Native_Asset_Data_DataAssetType = 11
	BidRequest_Imp_Native_Asset_Data_CTATEXT    BidRequest_Imp_Native_Asset_Data_DataAssetType = 12
)

var BidRequest_Imp_Native_Asset_Data_DataAssetType_name = map[int32]string{
	1:  "SPONSORED",
	2:  "DESC",
	3:  "RATING",
	4:  "LIKES",
	5:  "DOWNLOADS",
	6:  "PRICE",
	7:  "SALEPRICE",
	8:  "PHONE",
	9:  "ADDRESS",
	10: "DESC2",
	11: "DISPLAYURL",
	12: "CTATEXT",
}
var BidRequest_Imp_Native_Asset_Data_DataAssetType_value = map[string]int32{
	"SPONSORED":  1,
	"DESC":       2,
	"RATING":     3,
	"LIKES":      4,
	"DOWNLOADS":  5,
	"PRICE":      6,
	"SALEPRICE":  7,
	"PHONE":      8,
	"ADDRESS":    9,
	"DESC2":      10,
	"DISPLAYURL": 11,
	"CTATEXT":    12,
}

func (x BidRequest_Imp_Native_Asset_Data_DataAssetType) Enum() *BidRequest_Imp_Native_Asset_Data_DataAssetType {
	p := new(BidRequest_Imp_Native_Asset_Data_DataAssetType)
	*p = x
	return p
}
func (x BidRequest_Imp_Native_Asset_Data_DataAssetType) String() string {
	return proto.EnumName(BidRequest_Imp_Native_Asset_Data_DataAssetType_name, int32(x))
}
func (x *BidRequest_Imp_Native_Asset_Data_DataAssetType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Imp_Native_Asset_Data_DataAssetType_value, data, "BidRequest_Imp_Native_Asset_Data_DataAssetType")
	if err != nil {
		return err
	}
	*x = BidRequest_Imp_Native_Asset_Data_DataAssetType(value)
	return nil
}

type BidRequest_Device_DeviceType int32

const (
	BidRequest_Device_MOBILE            BidRequest_Device_DeviceType = 1
	BidRequest_Device_PERSONAL_COMPUTER BidRequest_Device_DeviceType = 2
	BidRequest_Device_CONNECTED_TV      BidRequest_Device_DeviceType = 3
	BidRequest_Device_PHONE             BidRequest_Device_DeviceType = 4
	BidRequest_Device_TABLET            BidRequest_Device_DeviceType = 5
	BidRequest_Device_CONNECTED_DEVICE  BidRequest_Device_DeviceType = 6
	BidRequest_Device_SET_TOP_BOX       BidRequest_Device_DeviceType = 7
)

var BidRequest_Device_DeviceType_name = map[int32]string{
	1: "MOBILE",
	2: "PERSONAL_COMPUTER",
	3: "CONNECTED_TV",
	4: "PHONE",
	5: "TABLET",
	6: "CONNECTED_DEVICE",
	7: "SET_TOP_BOX",
}
var BidRequest_Device_DeviceType_value = map[string]int32{
	"MOBILE":            1,
	"PERSONAL_COMPUTER": 2,
	"CONNECTED_TV":      3,
	"PHONE":             4,
	"TABLET":            5,
	"CONNECTED_DEVICE":  6,
	"SET_TOP_BOX":       7,
}

func (x BidRequest_Device_DeviceType) Enum() *BidRequest_Device_DeviceType {
	p := new(BidRequest_Device_DeviceType)
	*p = x
	return p
}
func (x BidRequest_Device_DeviceType) String() string {
	return proto.EnumName(BidRequest_Device_DeviceType_name, int32(x))
}
func (x *BidRequest_Device_DeviceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Device_DeviceType_value, data, "BidRequest_Device_DeviceType")
	if err != nil {
		return err
	}
	*x = BidRequest_Device_DeviceType(value)
	return nil
}

type BidRequest_Device_ConnectionType int32

const (
	BidRequest_Device_CONNECTION_UNKNOWN BidRequest_Device_ConnectionType = 0
	BidRequest_Device_ETHERNET           BidRequest_Device_ConnectionType = 1
	BidRequest_Device_WIFI               BidRequest_Device_ConnectionType = 2
	BidRequest_Device_CELL_UNKNOWN       BidRequest_Device_ConnectionType = 3
	BidRequest_Device_CELL_2G            BidRequest_Device_ConnectionType = 4
	BidRequest_Device_CELL_3G            BidRequest_Device_ConnectionType = 5
	BidRequest_Device_CELL_4G            BidRequest_Device_ConnectionType = 6
)

var BidRequest_Device_ConnectionType_name = map[int32]string{
	0: "CONNECTION_UNKNOWN",
	1: "ETHERNET",
	2: "WIFI",
	3: "CELL_UNKNOWN",
	4: "CELL_2G",
	5: "CELL_3G",
	6: "CELL_4G",
}
var BidRequest_Device_ConnectionType_value = map[string]int32{
	"CONNECTION_UNKNOWN": 0,
	"ETHERNET":           1,
	"WIFI":               2,
	"CELL_UNKNOWN":       3,
	"CELL_2G":            4,
	"CELL_3G":            5,
	"CELL_4G":            6,
}

func (x BidRequest_Device_ConnectionType) Enum() *BidRequest_Device_ConnectionType {
	p := new(BidRequest_Device_ConnectionType)
	*p = x
	return p
}
func (x BidRequest_Device_ConnectionType) String() string {
	return proto.EnumName(BidRequest_Device_ConnectionType_name, int32(x))
}
func (x *BidRequest_Device_ConnectionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Device_ConnectionType_value, data, "BidRequest_Device_ConnectionType")
	if err != nil {
		return err
	}
	*x = BidRequest_Device_ConnectionType(value)
	return nil
}

type BidRequest_Device_Geo_LocationType int32

const (
	BidRequest_Device_Geo_GPS_LOCATION  BidRequest_Device_Geo_LocationType = 1
	BidRequest_Device_Geo_IP            BidRequest_Device_Geo_LocationType = 2
	BidRequest_Device_Geo_USER_PROVIDED BidRequest_Device_Geo_LocationType = 3
)

var BidRequest_Device_Geo_LocationType_name = map[int32]string{
	1: "GPS_LOCATION",
	2: "IP",
	3: "USER_PROVIDED",
}
var BidRequest_Device_Geo_LocationType_value = map[string]int32{
	"GPS_LOCATION":  1,
	"IP":            2,
	"USER_PROVIDED": 3,
}

func (x BidRequest_Device_Geo_LocationType) Enum() *BidRequest_Device_Geo_LocationType {
	p := new(BidRequest_Device_Geo_LocationType)
	*p = x
	return p
}
func (x BidRequest_Device_Geo_LocationType) String() string {
	return proto.EnumName(BidRequest_Device_Geo_LocationType_name, int32(x))
}
func (x *BidRequest_Device_Geo_LocationType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Device_Geo_LocationType_value, data, "BidRequest_Device_Geo_LocationType")
	if err != nil {
		return err
	}
	*x = BidRequest_Device_Geo_LocationType(value)
	return nil
}

type BidRequest struct {
	// Unique ID of the bid request, provided by the exchange.
	Id *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	// Array of Imp objects representing the impressions offered.
	// At least 1 Imp object is required.
	Imp []*BidRequest_Imp `protobuf:"bytes,2,rep,name=imp" json:"imp,omitempty"`
	// Details via a Site object about the publisher's website.
	// Only applicable for websites.
	Site *BidRequest_Site `protobuf:"bytes,3,opt,name=site" json:"site,omitempty"`
	// Details via an App object about the publisher's app.
	// Only applicable for apps.
	App *BidRequest_App `protobuf:"bytes,4,opt,name=app" json:"app,omitempty"`
	// Details via a Device object about the user's
	// device to which the impression will be delivered.
	Device *BidRequest_Device `protobuf:"bytes,5,opt,name=device" json:"device,omitempty"`
	// Details via a User object about the human user of the device.
	User *BidRequest_User `protobuf:"bytes,6,opt,name=user" json:"user,omitempty"`
	// Blocked advertiser categories using the IAB content categories.
	Bcat []string `protobuf:"bytes,12,rep,name=bcat" json:"bcat,omitempty"`
	// Block list of advertisers by their domains (e.g., "xiaodu.com").
	Badv             []string `protobuf:"bytes,13,rep,name=badv" json:"badv,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *BidRequest) Reset()         { *m = BidRequest{} }
func (m *BidRequest) String() string { return proto.CompactTextString(m) }
func (*BidRequest) ProtoMessage()    {}

func (m *BidRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *BidRequest) GetImp() []*BidRequest_Imp {
	if m != nil {
		return m.Imp
	}
	return nil
}

func (m *BidRequest) GetSite() *BidRequest_Site {
	if m != nil {
		return m.Site
	}
	return nil
}

func (m *BidRequest) GetApp() *BidRequest_App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *BidRequest) GetDevice() *BidRequest_Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *BidRequest) GetUser() *BidRequest_User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *BidRequest) GetBcat() []string {
	if m != nil {
		return m.Bcat
	}
	return nil
}

func (m *BidRequest) GetBadv() []string {
	if m != nil {
		return m.Badv
	}
	return nil
}

// This object describes an ad placement or impression being auctioned.
type BidRequest_Imp struct {
	// A unique identifier for this impression.
	Id *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	// Required if this impression is offered as a banner ad opportunity.
	Banner *BidRequest_Imp_Banner `protobuf:"bytes,2,opt,name=banner" json:"banner,omitempty"`
	// Required if this impression is offered as a video ad opportunity.
	Video *BidRequest_Imp_Video `protobuf:"bytes,3,opt,name=video" json:"video,omitempty"`
	// Required if this impression is offered as a native ad opportunity.
	Native *BidRequest_Imp_Native `protobuf:"bytes,13,opt,name=native" json:"native,omitempty"`
	// List of allowed bidtype and corresponding bidfloor.
	// At least 1 BidInfo object is required.
	Bidinfo []*BidRequest_Imp_BidInfo `protobuf:"bytes,14,rep,name=bidinfo" json:"bidinfo,omitempty"`
	// Type of current adslot.
	Slottype         *BidRequest_Imp_SlotType `protobuf:"varint,15,opt,name=slottype,enum=xiaodu.BidRequest_Imp_SlotType" json:"slottype,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *BidRequest_Imp) Reset()         { *m = BidRequest_Imp{} }
func (m *BidRequest_Imp) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Imp) ProtoMessage()    {}

func (m *BidRequest_Imp) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *BidRequest_Imp) GetBanner() *BidRequest_Imp_Banner {
	if m != nil {
		return m.Banner
	}
	return nil
}

func (m *BidRequest_Imp) GetVideo() *BidRequest_Imp_Video {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *BidRequest_Imp) GetNative() *BidRequest_Imp_Native {
	if m != nil {
		return m.Native
	}
	return nil
}

func (m *BidRequest_Imp) GetBidinfo() []*BidRequest_Imp_BidInfo {
	if m != nil {
		return m.Bidinfo
	}
	return nil
}

func (m *BidRequest_Imp) GetSlottype() BidRequest_Imp_SlotType {
	if m != nil && m.Slottype != nil {
		return *m.Slottype
	}
	return BidRequest_Imp_SLOT_FIXED
}

// xiaodu-adx support different bid type.
type BidRequest_Imp_BidInfo struct {
	Bidtype          *int32 `protobuf:"varint,1,req,name=bidtype" json:"bidtype,omitempty"`
	Bidfloor         *int32 `protobuf:"varint,2,opt,name=bidfloor" json:"bidfloor,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_Imp_BidInfo) Reset()         { *m = BidRequest_Imp_BidInfo{} }
func (m *BidRequest_Imp_BidInfo) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Imp_BidInfo) ProtoMessage()    {}

func (m *BidRequest_Imp_BidInfo) GetBidtype() int32 {
	if m != nil && m.Bidtype != nil {
		return *m.Bidtype
	}
	return 0
}

func (m *BidRequest_Imp_BidInfo) GetBidfloor() int32 {
	if m != nil && m.Bidfloor != nil {
		return *m.Bidfloor
	}
	return 0
}

// Banner impression.
type BidRequest_Imp_Banner struct {
	// Width of the impression in pixels.
	// If neither wmin nor wmax are specified, this value is an exact
	// width requirement. Otherwise it is a preferred width.
	W *int32 `protobuf:"varint,1,opt,name=w" json:"w,omitempty"`
	// Height of the impression in pixels.
	// If neither hmin nor hmax are specified, this value is an exact
	// height requirement. Otherwise it is a preferred height.
	H *int32 `protobuf:"varint,2,opt,name=h" json:"h,omitempty"`
	// Maximum width of the impression in pixels.
	Wmax *int32 `protobuf:"varint,11,opt,name=wmax" json:"wmax,omitempty"`
	// Maximum height of the impression in pixels.
	Hmax *int32 `protobuf:"varint,12,opt,name=hmax" json:"hmax,omitempty"`
	// Minimum width of the impression in pixels.
	Wmin *int32 `protobuf:"varint,13,opt,name=wmin" json:"wmin,omitempty"`
	// Minimum height of the impression in pixels.
	Hmin *int32 `protobuf:"varint,14,opt,name=hmin" json:"hmin,omitempty"`
	// Type of current adslot.
	Slottype *BidRequest_Imp_Banner_SlotType `protobuf:"varint,15,opt,name=slottype,enum=xiaodu.BidRequest_Imp_Banner_SlotType" json:"slottype,omitempty"`
	// Whitelist of content MIME types supported.
	// Popular MIME types include, but are not limited to "image/jpg",
	// "image/gif" and "application/x-shockwave-flash".
	Mimes            []string `protobuf:"bytes,7,rep,name=mimes" json:"mimes,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *BidRequest_Imp_Banner) Reset()         { *m = BidRequest_Imp_Banner{} }
func (m *BidRequest_Imp_Banner) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Imp_Banner) ProtoMessage()    {}

func (m *BidRequest_Imp_Banner) GetW() int32 {
	if m != nil && m.W != nil {
		return *m.W
	}
	return 0
}

func (m *BidRequest_Imp_Banner) GetH() int32 {
	if m != nil && m.H != nil {
		return *m.H
	}
	return 0
}

func (m *BidRequest_Imp_Banner) GetWmax() int32 {
	if m != nil && m.Wmax != nil {
		return *m.Wmax
	}
	return 0
}

func (m *BidRequest_Imp_Banner) GetHmax() int32 {
	if m != nil && m.Hmax != nil {
		return *m.Hmax
	}
	return 0
}

func (m *BidRequest_Imp_Banner) GetWmin() int32 {
	if m != nil && m.Wmin != nil {
		return *m.Wmin
	}
	return 0
}

func (m *BidRequest_Imp_Banner) GetHmin() int32 {
	if m != nil && m.Hmin != nil {
		return *m.Hmin
	}
	return 0
}

func (m *BidRequest_Imp_Banner) GetSlottype() BidRequest_Imp_Banner_SlotType {
	if m != nil && m.Slottype != nil {
		return *m.Slottype
	}
	return BidRequest_Imp_Banner_SLOT_FIXED
}

func (m *BidRequest_Imp_Banner) GetMimes() []string {
	if m != nil {
		return m.Mimes
	}
	return nil
}

// Video impression.
type BidRequest_Imp_Video struct {
	// Whitelist of content MIME types supported.
	// At least 1 element is required.
	Mimes []string `protobuf:"bytes,1,rep,name=mimes" json:"mimes,omitempty"`
	// Indicates if the impression must be linear, nonlinear, etc.
	// If none specified, assume all are allowed.
	Linearity *BidRequest_Imp_Video_VideoLinearity `protobuf:"varint,2,opt,name=linearity,enum=xiaodu.BidRequest_Imp_Video_VideoLinearity" json:"linearity,omitempty"`
	// Minimum video ad duration in seconds.
	Minduration *int32 `protobuf:"varint,3,opt,name=minduration" json:"minduration,omitempty"`
	// Maximum video ad duration in seconds.
	Maxduration *int32 `protobuf:"varint,4,opt,name=maxduration" json:"maxduration,omitempty"`
	// Width of the player in pixels.
	W *int32 `protobuf:"varint,6,opt,name=w" json:"w,omitempty"`
	// Height of the player in pixels.
	H *int32 `protobuf:"varint,7,opt,name=h" json:"h,omitempty"`
	// Indicates the start delay in seconds for pre-roll,
	// mid-roll, or post-roll ad placements.
	//  0: PRE_ROLL
	//  1: GENERIC_MID_ROLL
	//  -1: GENERIC_POST_ROLL
	//  Other values: videoad_start_delay
	Startdelay *int32 `protobuf:"varint,8,opt,name=startdelay" json:"startdelay,omitempty"`
	// Minimum bit rate in Kbps.
	Minbitrate *int32 `protobuf:"varint,12,opt,name=minbitrate" json:"minbitrate,omitempty"`
	// Maximum bit rate in Kbps.
	Maxbitrate *int32 `protobuf:"varint,13,opt,name=maxbitrate" json:"maxbitrate,omitempty"`
	// Type of current adslot.
	Slottype         *BidRequest_Imp_Video_SlotType `protobuf:"varint,14,opt,name=slottype,enum=xiaodu.BidRequest_Imp_Video_SlotType" json:"slottype,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *BidRequest_Imp_Video) Reset()         { *m = BidRequest_Imp_Video{} }
func (m *BidRequest_Imp_Video) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Imp_Video) ProtoMessage()    {}

func (m *BidRequest_Imp_Video) GetMimes() []string {
	if m != nil {
		return m.Mimes
	}
	return nil
}

func (m *BidRequest_Imp_Video) GetLinearity() BidRequest_Imp_Video_VideoLinearity {
	if m != nil && m.Linearity != nil {
		return *m.Linearity
	}
	return BidRequest_Imp_Video_LINEAR
}

func (m *BidRequest_Imp_Video) GetMinduration() int32 {
	if m != nil && m.Minduration != nil {
		return *m.Minduration
	}
	return 0
}

func (m *BidRequest_Imp_Video) GetMaxduration() int32 {
	if m != nil && m.Maxduration != nil {
		return *m.Maxduration
	}
	return 0
}

func (m *BidRequest_Imp_Video) GetW() int32 {
	if m != nil && m.W != nil {
		return *m.W
	}
	return 0
}

func (m *BidRequest_Imp_Video) GetH() int32 {
	if m != nil && m.H != nil {
		return *m.H
	}
	return 0
}

func (m *BidRequest_Imp_Video) GetStartdelay() int32 {
	if m != nil && m.Startdelay != nil {
		return *m.Startdelay
	}
	return 0
}

func (m *BidRequest_Imp_Video) GetMinbitrate() int32 {
	if m != nil && m.Minbitrate != nil {
		return *m.Minbitrate
	}
	return 0
}

func (m *BidRequest_Imp_Video) GetMaxbitrate() int32 {
	if m != nil && m.Maxbitrate != nil {
		return *m.Maxbitrate
	}
	return 0
}

func (m *BidRequest_Imp_Video) GetSlottype() BidRequest_Imp_Video_SlotType {
	if m != nil && m.Slottype != nil {
		return *m.Slottype
	}
	return BidRequest_Imp_Video_SLOT_FIXED
}

// Native impression.
type BidRequest_Imp_Native struct {
	// Asset requested by exchange on behalf of the rendering client.
	// At least 1 Asset object is required.
	Assets           []*BidRequest_Imp_Native_Asset `protobuf:"bytes,6,rep,name=assets" json:"assets,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *BidRequest_Imp_Native) Reset()         { *m = BidRequest_Imp_Native{} }
func (m *BidRequest_Imp_Native) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Imp_Native) ProtoMessage()    {}

func (m *BidRequest_Imp_Native) GetAssets() []*BidRequest_Imp_Native_Asset {
	if m != nil {
		return m.Assets
	}
	return nil
}

type BidRequest_Imp_Native_Asset struct {
	// Unique asset ID, assigned by exchange.
	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// Set to true if asset is required
	Required *bool `protobuf:"varint,2,opt,name=required,def=0" json:"required,omitempty"`
	// Only one of the {title, img, data} objects should
	// be present in each object.
	// Title assets.
	Title *BidRequest_Imp_Native_Asset_Title `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	// Image assets.
	Img *BidRequest_Imp_Native_Asset_Image `protobuf:"bytes,4,opt,name=img" json:"img,omitempty"`
	// Data assets for desc, ratings etc.
	Data             *BidRequest_Imp_Native_Asset_Data `protobuf:"bytes,6,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *BidRequest_Imp_Native_Asset) Reset()         { *m = BidRequest_Imp_Native_Asset{} }
func (m *BidRequest_Imp_Native_Asset) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Imp_Native_Asset) ProtoMessage()    {}

const Default_BidRequest_Imp_Native_Asset_Required bool = false

func (m *BidRequest_Imp_Native_Asset) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidRequest_Imp_Native_Asset) GetRequired() bool {
	if m != nil && m.Required != nil {
		return *m.Required
	}
	return Default_BidRequest_Imp_Native_Asset_Required
}

func (m *BidRequest_Imp_Native_Asset) GetTitle() *BidRequest_Imp_Native_Asset_Title {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *BidRequest_Imp_Native_Asset) GetImg() *BidRequest_Imp_Native_Asset_Image {
	if m != nil {
		return m.Img
	}
	return nil
}

func (m *BidRequest_Imp_Native_Asset) GetData() *BidRequest_Imp_Native_Asset_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// The Title object is to be used for title element
// of the Native ad.
type BidRequest_Imp_Native_Asset_Title struct {
	// Maximum length of the text in the title element.
	Len              *int32 `protobuf:"varint,1,req,name=len" json:"len,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_Imp_Native_Asset_Title) Reset()         { *m = BidRequest_Imp_Native_Asset_Title{} }
func (m *BidRequest_Imp_Native_Asset_Title) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Imp_Native_Asset_Title) ProtoMessage()    {}

func (m *BidRequest_Imp_Native_Asset_Title) GetLen() int32 {
	if m != nil && m.Len != nil {
		return *m.Len
	}
	return 0
}

// The Image object to be used for all image elements
// of the Native ad such as Icons, Main Image, etc.
type BidRequest_Imp_Native_Asset_Image struct {
	// Type ID of the image element supported by the publisher.
	Type *BidRequest_Imp_Native_Asset_Image_ImageAssetType `protobuf:"varint,1,opt,name=type,enum=xiaodu.BidRequest_Imp_Native_Asset_Image_ImageAssetType" json:"type,omitempty"`
	// Width of the image in pixels.
	W *int32 `protobuf:"varint,2,opt,name=w" json:"w,omitempty"`
	// Height of the image in pixels.
	H *int32 `protobuf:"varint,3,opt,name=h" json:"h,omitempty"`
	// The minimum requested width of the image in pixels.
	// Either w or wmin should be transmitted.
	// If only w is included, it should be considered
	// an exact requirement.
	Wmin *int32 `protobuf:"varint,4,opt,name=wmin" json:"wmin,omitempty"`
	// The minimum requested height of the image in pixels.
	// Either h or hmin should be transmitted.
	// If only h is included, it should be considered
	// an exact requirement.
	Hmin *int32 `protobuf:"varint,5,opt,name=hmin" json:"hmin,omitempty"`
	// Whitelist of content MIME types supported.
	// If blank, assume all types are allowed.
	Mimes            []string `protobuf:"bytes,6,rep,name=mimes" json:"mimes,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *BidRequest_Imp_Native_Asset_Image) Reset()         { *m = BidRequest_Imp_Native_Asset_Image{} }
func (m *BidRequest_Imp_Native_Asset_Image) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Imp_Native_Asset_Image) ProtoMessage()    {}

func (m *BidRequest_Imp_Native_Asset_Image) GetType() BidRequest_Imp_Native_Asset_Image_ImageAssetType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return BidRequest_Imp_Native_Asset_Image_ICON
}

func (m *BidRequest_Imp_Native_Asset_Image) GetW() int32 {
	if m != nil && m.W != nil {
		return *m.W
	}
	return 0
}

func (m *BidRequest_Imp_Native_Asset_Image) GetH() int32 {
	if m != nil && m.H != nil {
		return *m.H
	}
	return 0
}

func (m *BidRequest_Imp_Native_Asset_Image) GetWmin() int32 {
	if m != nil && m.Wmin != nil {
		return *m.Wmin
	}
	return 0
}

func (m *BidRequest_Imp_Native_Asset_Image) GetHmin() int32 {
	if m != nil && m.Hmin != nil {
		return *m.Hmin
	}
	return 0
}

func (m *BidRequest_Imp_Native_Asset_Image) GetMimes() []string {
	if m != nil {
		return m.Mimes
	}
	return nil
}

// The Data Object is to be used for all non-core elements
// of the native unit such as Ratings, Review Count, etc.
type BidRequest_Imp_Native_Asset_Data struct {
	// Type ID of the element supported by the publisher.
	Type *BidRequest_Imp_Native_Asset_Data_DataAssetType `protobuf:"varint,1,req,name=type,enum=xiaodu.BidRequest_Imp_Native_Asset_Data_DataAssetType" json:"type,omitempty"`
	// Maximum length of the text in the element's response.
	Len              *int32 `protobuf:"varint,2,opt,name=len" json:"len,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_Imp_Native_Asset_Data) Reset()         { *m = BidRequest_Imp_Native_Asset_Data{} }
func (m *BidRequest_Imp_Native_Asset_Data) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Imp_Native_Asset_Data) ProtoMessage()    {}

func (m *BidRequest_Imp_Native_Asset_Data) GetType() BidRequest_Imp_Native_Asset_Data_DataAssetType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return BidRequest_Imp_Native_Asset_Data_SPONSORED
}

func (m *BidRequest_Imp_Native_Asset_Data) GetLen() int32 {
	if m != nil && m.Len != nil {
		return *m.Len
	}
	return 0
}

// Site information
type BidRequest_Site struct {
	// Site Id.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Site name.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Domain of the site.
	Domain *string `protobuf:"bytes,3,opt,name=domain" json:"domain,omitempty"`
	// Array of IAB content categories of the site.
	Cat []string `protobuf:"bytes,4,rep,name=cat" json:"cat,omitempty"`
	// Quality of the site.
	Quality *string `protobuf:"bytes,5,opt,name=quality" json:"quality,omitempty"`
	// Array of IAB content categories that describe
	// the current page or view of the site.
	Pagecat []string `protobuf:"bytes,6,rep,name=pagecat" json:"pagecat,omitempty"`
	// URL of the page where the impression will be shown.
	Page *string `protobuf:"bytes,7,opt,name=page" json:"page,omitempty"`
	// Quality of the page.
	Pagequality *string `protobuf:"bytes,14,opt,name=pagequality" json:"pagequality,omitempty"`
	// Type of the page.
	Pagetype *string `protobuf:"bytes,15,opt,name=pagetype" json:"pagetype,omitempty"`
	// Referrer URL that caused navigation to the current page.
	Ref *string `protobuf:"bytes,9,opt,name=ref" json:"ref,omitempty"`
	// Comma separated list of keywords about this site.
	Keywords         *string `protobuf:"bytes,13,opt,name=keywords" json:"keywords,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_Site) Reset()         { *m = BidRequest_Site{} }
func (m *BidRequest_Site) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Site) ProtoMessage()    {}

func (m *BidRequest_Site) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *BidRequest_Site) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *BidRequest_Site) GetDomain() string {
	if m != nil && m.Domain != nil {
		return *m.Domain
	}
	return ""
}

func (m *BidRequest_Site) GetCat() []string {
	if m != nil {
		return m.Cat
	}
	return nil
}

func (m *BidRequest_Site) GetQuality() string {
	if m != nil && m.Quality != nil {
		return *m.Quality
	}
	return ""
}

func (m *BidRequest_Site) GetPagecat() []string {
	if m != nil {
		return m.Pagecat
	}
	return nil
}

func (m *BidRequest_Site) GetPage() string {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return ""
}

func (m *BidRequest_Site) GetPagequality() string {
	if m != nil && m.Pagequality != nil {
		return *m.Pagequality
	}
	return ""
}

func (m *BidRequest_Site) GetPagetype() string {
	if m != nil && m.Pagetype != nil {
		return *m.Pagetype
	}
	return ""
}

func (m *BidRequest_Site) GetRef() string {
	if m != nil && m.Ref != nil {
		return *m.Ref
	}
	return ""
}

func (m *BidRequest_Site) GetKeywords() string {
	if m != nil && m.Keywords != nil {
		return *m.Keywords
	}
	return ""
}

// App information.
type BidRequest_App struct {
	// Application Id.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Application name.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Domain of the application. For example, "mygame.foo.com".
	Domain *string `protobuf:"bytes,3,opt,name=domain" json:"domain,omitempty"`
	// Array of IAB content categories of the app.
	Cat []string `protobuf:"bytes,4,rep,name=cat" json:"cat,omitempty"`
	// Quality of the app.
	Quality *string `protobuf:"bytes,5,opt,name=quality" json:"quality,omitempty"`
	// Array of IAB content categories that describe
	// the current page or view of the app.
	Pagecat []string `protobuf:"bytes,6,rep,name=pagecat" json:"pagecat,omitempty"`
	// Quality of the page.
	Pagequality *string `protobuf:"bytes,18,opt,name=pagequality" json:"pagequality,omitempty"`
	// Application version.
	Ver *string `protobuf:"bytes,7,opt,name=ver" json:"ver,omitempty"`
	// Application bundle or package name (for example, com.foo.mygame).
	Bundle *string `protobuf:"bytes,8,opt,name=bundle" json:"bundle,omitempty"`
	// 0 = app is free, 1 = the app is a paid version.
	Paid *bool `protobuf:"varint,10,opt,name=paid" json:"paid,omitempty"`
	// Comma separated list of keywords about the app.
	Keywords *string `protobuf:"bytes,13,opt,name=keywords" json:"keywords,omitempty"`
	// App store URL for an installed app.
	Storeurl         *string `protobuf:"bytes,16,opt,name=storeurl" json:"storeurl,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_App) Reset()         { *m = BidRequest_App{} }
func (m *BidRequest_App) String() string { return proto.CompactTextString(m) }
func (*BidRequest_App) ProtoMessage()    {}

func (m *BidRequest_App) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *BidRequest_App) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *BidRequest_App) GetDomain() string {
	if m != nil && m.Domain != nil {
		return *m.Domain
	}
	return ""
}

func (m *BidRequest_App) GetCat() []string {
	if m != nil {
		return m.Cat
	}
	return nil
}

func (m *BidRequest_App) GetQuality() string {
	if m != nil && m.Quality != nil {
		return *m.Quality
	}
	return ""
}

func (m *BidRequest_App) GetPagecat() []string {
	if m != nil {
		return m.Pagecat
	}
	return nil
}

func (m *BidRequest_App) GetPagequality() string {
	if m != nil && m.Pagequality != nil {
		return *m.Pagequality
	}
	return ""
}

func (m *BidRequest_App) GetVer() string {
	if m != nil && m.Ver != nil {
		return *m.Ver
	}
	return ""
}

func (m *BidRequest_App) GetBundle() string {
	if m != nil && m.Bundle != nil {
		return *m.Bundle
	}
	return ""
}

func (m *BidRequest_App) GetPaid() bool {
	if m != nil && m.Paid != nil {
		return *m.Paid
	}
	return false
}

func (m *BidRequest_App) GetKeywords() string {
	if m != nil && m.Keywords != nil {
		return *m.Keywords
	}
	return ""
}

func (m *BidRequest_App) GetStoreurl() string {
	if m != nil && m.Storeurl != nil {
		return *m.Storeurl
	}
	return ""
}

// Device information.
type BidRequest_Device struct {
	// Standard "Do Not Track" flag as set in the header by the browser,
	// where 0 = tracking is unrestricted, 1 = do not track.
	Dnt *bool `protobuf:"varint,1,opt,name=dnt" json:"dnt,omitempty"`
	// Browser user agent string.
	Ua *string `protobuf:"bytes,2,opt,name=ua" json:"ua,omitempty"`
	// IPv4 address closest to device.
	Ip *string `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty"`
	// Location information.
	Geo *BidRequest_Device_Geo `protobuf:"bytes,4,opt,name=geo" json:"geo,omitempty"`
	// Hardware device id (e.g. IMEI).
	Did     *string `protobuf:"bytes,5,opt,name=did" json:"did,omitempty"`
	Didsha1 *string `protobuf:"bytes,6,opt,name=didsha1" json:"didsha1,omitempty"`
	Didmd5  *string `protobuf:"bytes,7,opt,name=didmd5" json:"didmd5,omitempty"`
	// Platform device id (e.g. Adroid ID).
	Dpid     *string `protobuf:"bytes,8,opt,name=dpid" json:"dpid,omitempty"`
	Dpidsha1 *string `protobuf:"bytes,9,opt,name=dpidsha1" json:"dpidsha1,omitempty"`
	Dpidmd5  *string `protobuf:"bytes,10,opt,name=dpidmd5" json:"dpidmd5,omitempty"`
	// Mac address.
	Mac     *string `protobuf:"bytes,11,opt,name=mac" json:"mac,omitempty"`
	Macsha1 *string `protobuf:"bytes,12,opt,name=macsha1" json:"macsha1,omitempty"`
	Macmd5  *string `protobuf:"bytes,13,opt,name=macmd5" json:"macmd5,omitempty"`
	// IDFA from Apple device.
	Idfa     *string `protobuf:"bytes,14,opt,name=idfa" json:"idfa,omitempty"`
	Idfasha1 *string `protobuf:"bytes,15,opt,name=idfasha1" json:"idfasha1,omitempty"`
	Idfamd5  *string `protobuf:"bytes,16,opt,name=idfamd5" json:"idfamd5,omitempty"`
	// IPv6 address closest to device.
	Ipv6 *string `protobuf:"bytes,17,opt,name=ipv6" json:"ipv6,omitempty"`
	// Carrier or ISP, e.g. "中国移动".
	Carrier *int32 `protobuf:"varint,18,opt,name=carrier" json:"carrier,omitempty"`
	// Device make (e.g., "Apple").
	Make *string `protobuf:"bytes,19,opt,name=make" json:"make,omitempty"`
	// Device model (e.g., "iPhone5s").
	Model *string `protobuf:"bytes,20,opt,name=model" json:"model,omitempty"`
	// Device operating system (e.g., "iOS").
	Os *string `protobuf:"bytes,21,opt,name=os" json:"os,omitempty"`
	// Device operating system version (e.g., "9.1.2").
	Osv *string `protobuf:"bytes,22,opt,name=osv" json:"osv,omitempty"`
	// Physical width of the screen in pixels.
	W *int32 `protobuf:"varint,23,opt,name=w" json:"w,omitempty"`
	// Physical height of the screen in pixels.
	H *int32 `protobuf:"varint,24,opt,name=h" json:"h,omitempty"`
	// Network connection type.
	Connectiontype *BidRequest_Device_ConnectionType `protobuf:"varint,25,opt,name=connectiontype,enum=xiaodu.BidRequest_Device_ConnectionType" json:"connectiontype,omitempty"`
	// The general type of device.
	Devicetype       *BidRequest_Device_DeviceType `protobuf:"varint,26,opt,name=devicetype,enum=xiaodu.BidRequest_Device_DeviceType" json:"devicetype,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *BidRequest_Device) Reset()         { *m = BidRequest_Device{} }
func (m *BidRequest_Device) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Device) ProtoMessage()    {}

func (m *BidRequest_Device) GetDnt() bool {
	if m != nil && m.Dnt != nil {
		return *m.Dnt
	}
	return false
}

func (m *BidRequest_Device) GetUa() string {
	if m != nil && m.Ua != nil {
		return *m.Ua
	}
	return ""
}

func (m *BidRequest_Device) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *BidRequest_Device) GetGeo() *BidRequest_Device_Geo {
	if m != nil {
		return m.Geo
	}
	return nil
}

func (m *BidRequest_Device) GetDid() string {
	if m != nil && m.Did != nil {
		return *m.Did
	}
	return ""
}

func (m *BidRequest_Device) GetDidsha1() string {
	if m != nil && m.Didsha1 != nil {
		return *m.Didsha1
	}
	return ""
}

func (m *BidRequest_Device) GetDidmd5() string {
	if m != nil && m.Didmd5 != nil {
		return *m.Didmd5
	}
	return ""
}

func (m *BidRequest_Device) GetDpid() string {
	if m != nil && m.Dpid != nil {
		return *m.Dpid
	}
	return ""
}

func (m *BidRequest_Device) GetDpidsha1() string {
	if m != nil && m.Dpidsha1 != nil {
		return *m.Dpidsha1
	}
	return ""
}

func (m *BidRequest_Device) GetDpidmd5() string {
	if m != nil && m.Dpidmd5 != nil {
		return *m.Dpidmd5
	}
	return ""
}

func (m *BidRequest_Device) GetMac() string {
	if m != nil && m.Mac != nil {
		return *m.Mac
	}
	return ""
}

func (m *BidRequest_Device) GetMacsha1() string {
	if m != nil && m.Macsha1 != nil {
		return *m.Macsha1
	}
	return ""
}

func (m *BidRequest_Device) GetMacmd5() string {
	if m != nil && m.Macmd5 != nil {
		return *m.Macmd5
	}
	return ""
}

func (m *BidRequest_Device) GetIdfa() string {
	if m != nil && m.Idfa != nil {
		return *m.Idfa
	}
	return ""
}

func (m *BidRequest_Device) GetIdfasha1() string {
	if m != nil && m.Idfasha1 != nil {
		return *m.Idfasha1
	}
	return ""
}

func (m *BidRequest_Device) GetIdfamd5() string {
	if m != nil && m.Idfamd5 != nil {
		return *m.Idfamd5
	}
	return ""
}

func (m *BidRequest_Device) GetIpv6() string {
	if m != nil && m.Ipv6 != nil {
		return *m.Ipv6
	}
	return ""
}

func (m *BidRequest_Device) GetCarrier() int32 {
	if m != nil && m.Carrier != nil {
		return *m.Carrier
	}
	return 0
}

func (m *BidRequest_Device) GetMake() string {
	if m != nil && m.Make != nil {
		return *m.Make
	}
	return ""
}

func (m *BidRequest_Device) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *BidRequest_Device) GetOs() string {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return ""
}

func (m *BidRequest_Device) GetOsv() string {
	if m != nil && m.Osv != nil {
		return *m.Osv
	}
	return ""
}

func (m *BidRequest_Device) GetW() int32 {
	if m != nil && m.W != nil {
		return *m.W
	}
	return 0
}

func (m *BidRequest_Device) GetH() int32 {
	if m != nil && m.H != nil {
		return *m.H
	}
	return 0
}

func (m *BidRequest_Device) GetConnectiontype() BidRequest_Device_ConnectionType {
	if m != nil && m.Connectiontype != nil {
		return *m.Connectiontype
	}
	return BidRequest_Device_CONNECTION_UNKNOWN
}

func (m *BidRequest_Device) GetDevicetype() BidRequest_Device_DeviceType {
	if m != nil && m.Devicetype != nil {
		return *m.Devicetype
	}
	return BidRequest_Device_MOBILE
}

// Location information.
type BidRequest_Device_Geo struct {
	// Latitude from -90.0 to +90.0, where negative is south.
	Lat *float64 `protobuf:"fixed64,1,opt,name=lat" json:"lat,omitempty"`
	// Longitude from -180.0 to +180.0, where negative is west.
	Lon *float64 `protobuf:"fixed64,2,opt,name=lon" json:"lon,omitempty"`
	// Country name, e.g. "中国".
	Country *string `protobuf:"bytes,3,opt,name=country" json:"country,omitempty"`
	// Province, e.g. "广州".
	Prov *string `protobuf:"bytes,6,opt,name=prov" json:"prov,omitempty"`
	// City, e.g. "深圳".
	City *string `protobuf:"bytes,7,opt,name=city" json:"city,omitempty"`
	// Source of location data.
	Type             *BidRequest_Device_Geo_LocationType `protobuf:"varint,9,opt,name=type,enum=xiaodu.BidRequest_Device_Geo_LocationType" json:"type,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *BidRequest_Device_Geo) Reset()         { *m = BidRequest_Device_Geo{} }
func (m *BidRequest_Device_Geo) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Device_Geo) ProtoMessage()    {}

func (m *BidRequest_Device_Geo) GetLat() float64 {
	if m != nil && m.Lat != nil {
		return *m.Lat
	}
	return 0
}

func (m *BidRequest_Device_Geo) GetLon() float64 {
	if m != nil && m.Lon != nil {
		return *m.Lon
	}
	return 0
}

func (m *BidRequest_Device_Geo) GetCountry() string {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return ""
}

func (m *BidRequest_Device_Geo) GetProv() string {
	if m != nil && m.Prov != nil {
		return *m.Prov
	}
	return ""
}

func (m *BidRequest_Device_Geo) GetCity() string {
	if m != nil && m.City != nil {
		return *m.City
	}
	return ""
}

func (m *BidRequest_Device_Geo) GetType() BidRequest_Device_Geo_LocationType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return BidRequest_Device_Geo_GPS_LOCATION
}

// User information.
type BidRequest_User struct {
	// User id.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Year of birth as a 4-digit integer, e.g. 1990
	Yob *int32 `protobuf:"varint,3,opt,name=yob" json:"yob,omitempty"`
	// Gender as "M" male, "F" female.
	Gender *string `protobuf:"bytes,4,opt,name=gender" json:"gender,omitempty"`
	// Comma separated list of keywords, interests, or intent.
	Keywords         *string `protobuf:"bytes,5,opt,name=keywords" json:"keywords,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_User) Reset()         { *m = BidRequest_User{} }
func (m *BidRequest_User) String() string { return proto.CompactTextString(m) }
func (*BidRequest_User) ProtoMessage()    {}

func (m *BidRequest_User) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *BidRequest_User) GetYob() int32 {
	if m != nil && m.Yob != nil {
		return *m.Yob
	}
	return 0
}

func (m *BidRequest_User) GetGender() string {
	if m != nil && m.Gender != nil {
		return *m.Gender
	}
	return ""
}

func (m *BidRequest_User) GetKeywords() string {
	if m != nil && m.Keywords != nil {
		return *m.Keywords
	}
	return ""
}

type BidResponse struct {
	// ID of the bid request to which this is a response.
	Id *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	// At least 1 seatbid is required if a bid is to be made.
	Seatbid []*BidResponse_SeatBid `protobuf:"bytes,2,rep,name=seatbid" json:"seatbid,omitempty"`
	// Bidder generated response ID to assist with logging/tracking.
	Bidid            *string `protobuf:"bytes,3,opt,name=bidid" json:"bidid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidResponse) Reset()         { *m = BidResponse{} }
func (m *BidResponse) String() string { return proto.CompactTextString(m) }
func (*BidResponse) ProtoMessage()    {}

func (m *BidResponse) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *BidResponse) GetSeatbid() []*BidResponse_SeatBid {
	if m != nil {
		return m.Seatbid
	}
	return nil
}

func (m *BidResponse) GetBidid() string {
	if m != nil && m.Bidid != nil {
		return *m.Bidid
	}
	return ""
}

type BidResponse_SeatBid struct {
	// Array of 1+ Bid objects each related to an impression.
	Bid []*BidResponse_SeatBid_Bid `protobuf:"bytes,1,rep,name=bid" json:"bid,omitempty"`
	// ID of the bidder seat on whose behalf this bid is made.
	Seat *string `protobuf:"bytes,2,opt,name=seat" json:"seat,omitempty"`
	// 0 = impressions can be won individually.
	// 1 = impressions must be won or lost as a group.
	Group            *bool  `protobuf:"varint,3,opt,name=group" json:"group,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidResponse_SeatBid) Reset()         { *m = BidResponse_SeatBid{} }
func (m *BidResponse_SeatBid) String() string { return proto.CompactTextString(m) }
func (*BidResponse_SeatBid) ProtoMessage()    {}

func (m *BidResponse_SeatBid) GetBid() []*BidResponse_SeatBid_Bid {
	if m != nil {
		return m.Bid
	}
	return nil
}

func (m *BidResponse_SeatBid) GetSeat() string {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return ""
}

func (m *BidResponse_SeatBid) GetGroup() bool {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return false
}

type BidResponse_SeatBid_Bid struct {
	// ID of the Imp object in the related bid request.
	Impid *string `protobuf:"bytes,2,req,name=impid" json:"impid,omitempty"`
	// Price of this bid.
	Price *int32 `protobuf:"varint,3,req,name=price" json:"price,omitempty"`
	// CPM, CPC, CPD or CPT
	Bidtype *int32 `protobuf:"varint,4,req,name=bidtype" json:"bidtype,omitempty"`
	// Non-native ad response.
	Adm *BidResponse_SeatBid_Bid_Adm `protobuf:"bytes,6,opt,name=adm" json:"adm,omitempty"`
	// Video VAST.
	Admvideo *string `protobuf:"bytes,7,opt,name=admvideo" json:"admvideo,omitempty"`
	// Native ad response.
	Admnative *BidResponse_SeatBid_Bid_AdmNative `protobuf:"bytes,8,opt,name=admnative" json:"admnative,omitempty"`
	// Creative ID of this bid.
	Crid *string `protobuf:"bytes,10,opt,name=crid" json:"crid,omitempty"`
	// Ext data which can be accessed by macro ${AUCTION_EXTDATA}.
	Extdata          *string `protobuf:"bytes,11,opt,name=extdata" json:"extdata,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidResponse_SeatBid_Bid) Reset()         { *m = BidResponse_SeatBid_Bid{} }
func (m *BidResponse_SeatBid_Bid) String() string { return proto.CompactTextString(m) }
func (*BidResponse_SeatBid_Bid) ProtoMessage()    {}

func (m *BidResponse_SeatBid_Bid) GetImpid() string {
	if m != nil && m.Impid != nil {
		return *m.Impid
	}
	return ""
}

func (m *BidResponse_SeatBid_Bid) GetPrice() int32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *BidResponse_SeatBid_Bid) GetBidtype() int32 {
	if m != nil && m.Bidtype != nil {
		return *m.Bidtype
	}
	return 0
}

func (m *BidResponse_SeatBid_Bid) GetAdm() *BidResponse_SeatBid_Bid_Adm {
	if m != nil {
		return m.Adm
	}
	return nil
}

func (m *BidResponse_SeatBid_Bid) GetAdmvideo() string {
	if m != nil && m.Admvideo != nil {
		return *m.Admvideo
	}
	return ""
}

func (m *BidResponse_SeatBid_Bid) GetAdmnative() *BidResponse_SeatBid_Bid_AdmNative {
	if m != nil {
		return m.Admnative
	}
	return nil
}

func (m *BidResponse_SeatBid_Bid) GetCrid() string {
	if m != nil && m.Crid != nil {
		return *m.Crid
	}
	return ""
}

func (m *BidResponse_SeatBid_Bid) GetExtdata() string {
	if m != nil && m.Extdata != nil {
		return *m.Extdata
	}
	return ""
}

type BidResponse_SeatBid_Bid_Adm struct {
	// URL of the asset.
	Asseturl *string `protobuf:"bytes,1,req,name=asseturl" json:"asseturl,omitempty"`
	// Width of the asset in pixels.
	W *int32 `protobuf:"varint,2,opt,name=w" json:"w,omitempty"`
	// Height of the asset in pixels.
	H *int32 `protobuf:"varint,3,opt,name=h" json:"h,omitempty"`
	// Array of impression tracking URLs.
	Imptrackers []string `protobuf:"bytes,4,rep,name=imptrackers" json:"imptrackers,omitempty"`
	// Landing URL of the clickable link.
	Landingpage *string `protobuf:"bytes,5,req,name=landingpage" json:"landingpage,omitempty"`
	// Third-party tracker URLs to be fired on click of the URL.
	Clicktrackers []string `protobuf:"bytes,6,rep,name=clicktrackers" json:"clicktrackers,omitempty"`
	// html snippet.
	Htmlsnippet      *string `protobuf:"bytes,7,opt,name=htmlsnippet" json:"htmlsnippet,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidResponse_SeatBid_Bid_Adm) Reset()         { *m = BidResponse_SeatBid_Bid_Adm{} }
func (m *BidResponse_SeatBid_Bid_Adm) String() string { return proto.CompactTextString(m) }
func (*BidResponse_SeatBid_Bid_Adm) ProtoMessage()    {}

func (m *BidResponse_SeatBid_Bid_Adm) GetAsseturl() string {
	if m != nil && m.Asseturl != nil {
		return *m.Asseturl
	}
	return ""
}

func (m *BidResponse_SeatBid_Bid_Adm) GetW() int32 {
	if m != nil && m.W != nil {
		return *m.W
	}
	return 0
}

func (m *BidResponse_SeatBid_Bid_Adm) GetH() int32 {
	if m != nil && m.H != nil {
		return *m.H
	}
	return 0
}

func (m *BidResponse_SeatBid_Bid_Adm) GetImptrackers() []string {
	if m != nil {
		return m.Imptrackers
	}
	return nil
}

func (m *BidResponse_SeatBid_Bid_Adm) GetLandingpage() string {
	if m != nil && m.Landingpage != nil {
		return *m.Landingpage
	}
	return ""
}

func (m *BidResponse_SeatBid_Bid_Adm) GetClicktrackers() []string {
	if m != nil {
		return m.Clicktrackers
	}
	return nil
}

func (m *BidResponse_SeatBid_Bid_Adm) GetHtmlsnippet() string {
	if m != nil && m.Htmlsnippet != nil {
		return *m.Htmlsnippet
	}
	return ""
}

type BidResponse_SeatBid_Bid_AdmNative struct {
	// Array of native elements.
	Assets []*BidResponse_SeatBid_Bid_AdmNative_Asset `protobuf:"bytes,1,rep,name=assets" json:"assets,omitempty"`
	// Destination Link.
	Link *BidResponse_SeatBid_Bid_AdmNative_Link `protobuf:"bytes,2,opt,name=link" json:"link,omitempty"`
	// Array of impression tracking URLs.
	Imptrackers      []string `protobuf:"bytes,3,rep,name=imptrackers" json:"imptrackers,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *BidResponse_SeatBid_Bid_AdmNative) Reset()         { *m = BidResponse_SeatBid_Bid_AdmNative{} }
func (m *BidResponse_SeatBid_Bid_AdmNative) String() string { return proto.CompactTextString(m) }
func (*BidResponse_SeatBid_Bid_AdmNative) ProtoMessage()    {}

func (m *BidResponse_SeatBid_Bid_AdmNative) GetAssets() []*BidResponse_SeatBid_Bid_AdmNative_Asset {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *BidResponse_SeatBid_Bid_AdmNative) GetLink() *BidResponse_SeatBid_Bid_AdmNative_Link {
	if m != nil {
		return m.Link
	}
	return nil
}

func (m *BidResponse_SeatBid_Bid_AdmNative) GetImptrackers() []string {
	if m != nil {
		return m.Imptrackers
	}
	return nil
}

type BidResponse_SeatBid_Bid_AdmNative_Link struct {
	// Landing URL of the clickable link.
	Url *string `protobuf:"bytes,1,req,name=url" json:"url,omitempty"`
	// Third-party tracker URLs to be fired on click of the URL.
	Clicktrackers    []string `protobuf:"bytes,2,rep,name=clicktrackers" json:"clicktrackers,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *BidResponse_SeatBid_Bid_AdmNative_Link) Reset() {
	*m = BidResponse_SeatBid_Bid_AdmNative_Link{}
}
func (m *BidResponse_SeatBid_Bid_AdmNative_Link) String() string { return proto.CompactTextString(m) }
func (*BidResponse_SeatBid_Bid_AdmNative_Link) ProtoMessage()    {}

func (m *BidResponse_SeatBid_Bid_AdmNative_Link) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *BidResponse_SeatBid_Bid_AdmNative_Link) GetClicktrackers() []string {
	if m != nil {
		return m.Clicktrackers
	}
	return nil
}

type BidResponse_SeatBid_Bid_AdmNative_Asset struct {
	// Unique asset ID, assigned by exchange,
	// must match one of the asset IDs in request.
	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// Set to 1 if asset is required.
	// (bidder requires it to be displayed).
	Required *bool `protobuf:"varint,2,opt,name=required,def=0" json:"required,omitempty"`
	// Title object for title assets.
	Title *BidResponse_SeatBid_Bid_AdmNative_Asset_Title `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	// Image object for image assets.
	Img *BidResponse_SeatBid_Bid_AdmNative_Asset_Image `protobuf:"bytes,4,opt,name=img" json:"img,omitempty"`
	// Data object for ratings, prices etc.
	Data *BidResponse_SeatBid_Bid_AdmNative_Asset_Data `protobuf:"bytes,6,opt,name=data" json:"data,omitempty"`
	// Link object for call to actions.
	Link             *BidResponse_SeatBid_Bid_AdmNative_Asset_Link `protobuf:"bytes,7,opt,name=link" json:"link,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *BidResponse_SeatBid_Bid_AdmNative_Asset) Reset() {
	*m = BidResponse_SeatBid_Bid_AdmNative_Asset{}
}
func (m *BidResponse_SeatBid_Bid_AdmNative_Asset) String() string { return proto.CompactTextString(m) }
func (*BidResponse_SeatBid_Bid_AdmNative_Asset) ProtoMessage()    {}

const Default_BidResponse_SeatBid_Bid_AdmNative_Asset_Required bool = false

func (m *BidResponse_SeatBid_Bid_AdmNative_Asset) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidResponse_SeatBid_Bid_AdmNative_Asset) GetRequired() bool {
	if m != nil && m.Required != nil {
		return *m.Required
	}
	return Default_BidResponse_SeatBid_Bid_AdmNative_Asset_Required
}

func (m *BidResponse_SeatBid_Bid_AdmNative_Asset) GetTitle() *BidResponse_SeatBid_Bid_AdmNative_Asset_Title {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *BidResponse_SeatBid_Bid_AdmNative_Asset) GetImg() *BidResponse_SeatBid_Bid_AdmNative_Asset_Image {
	if m != nil {
		return m.Img
	}
	return nil
}

func (m *BidResponse_SeatBid_Bid_AdmNative_Asset) GetData() *BidResponse_SeatBid_Bid_AdmNative_Asset_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *BidResponse_SeatBid_Bid_AdmNative_Asset) GetLink() *BidResponse_SeatBid_Bid_AdmNative_Asset_Link {
	if m != nil {
		return m.Link
	}
	return nil
}

type BidResponse_SeatBid_Bid_AdmNative_Asset_Title struct {
	// The text associated with the text element.
	Text             *string `protobuf:"bytes,1,req,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidResponse_SeatBid_Bid_AdmNative_Asset_Title) Reset() {
	*m = BidResponse_SeatBid_Bid_AdmNative_Asset_Title{}
}
func (m *BidResponse_SeatBid_Bid_AdmNative_Asset_Title) String() string {
	return proto.CompactTextString(m)
}
func (*BidResponse_SeatBid_Bid_AdmNative_Asset_Title) ProtoMessage() {}

func (m *BidResponse_SeatBid_Bid_AdmNative_Asset_Title) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type BidResponse_SeatBid_Bid_AdmNative_Asset_Image struct {
	// URL of the image asset.
	Url *string `protobuf:"bytes,1,req,name=url" json:"url,omitempty"`
	// Width of the image in pixels.
	W *int32 `protobuf:"varint,2,opt,name=w" json:"w,omitempty"`
	// Height of the image in pixels.
	H                *int32 `protobuf:"varint,3,opt,name=h" json:"h,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidResponse_SeatBid_Bid_AdmNative_Asset_Image) Reset() {
	*m = BidResponse_SeatBid_Bid_AdmNative_Asset_Image{}
}
func (m *BidResponse_SeatBid_Bid_AdmNative_Asset_Image) String() string {
	return proto.CompactTextString(m)
}
func (*BidResponse_SeatBid_Bid_AdmNative_Asset_Image) ProtoMessage() {}

func (m *BidResponse_SeatBid_Bid_AdmNative_Asset_Image) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *BidResponse_SeatBid_Bid_AdmNative_Asset_Image) GetW() int32 {
	if m != nil && m.W != nil {
		return *m.W
	}
	return 0
}

func (m *BidResponse_SeatBid_Bid_AdmNative_Asset_Image) GetH() int32 {
	if m != nil && m.H != nil {
		return *m.H
	}
	return 0
}

type BidResponse_SeatBid_Bid_AdmNative_Asset_Data struct {
	// The formatted string of data to be displayed.
	Value            *string `protobuf:"bytes,1,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidResponse_SeatBid_Bid_AdmNative_Asset_Data) Reset() {
	*m = BidResponse_SeatBid_Bid_AdmNative_Asset_Data{}
}
func (m *BidResponse_SeatBid_Bid_AdmNative_Asset_Data) String() string {
	return proto.CompactTextString(m)
}
func (*BidResponse_SeatBid_Bid_AdmNative_Asset_Data) ProtoMessage() {}

func (m *BidResponse_SeatBid_Bid_AdmNative_Asset_Data) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type BidResponse_SeatBid_Bid_AdmNative_Asset_Link struct {
	// Landing URL of the clickable link.
	Url *string `protobuf:"bytes,1,req,name=url" json:"url,omitempty"`
	// Third-party tracker URLs to be fired on click of the URL.
	Clicktrackers    []string `protobuf:"bytes,2,rep,name=clicktrackers" json:"clicktrackers,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *BidResponse_SeatBid_Bid_AdmNative_Asset_Link) Reset() {
	*m = BidResponse_SeatBid_Bid_AdmNative_Asset_Link{}
}
func (m *BidResponse_SeatBid_Bid_AdmNative_Asset_Link) String() string {
	return proto.CompactTextString(m)
}
func (*BidResponse_SeatBid_Bid_AdmNative_Asset_Link) ProtoMessage() {}

func (m *BidResponse_SeatBid_Bid_AdmNative_Asset_Link) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *BidResponse_SeatBid_Bid_AdmNative_Asset_Link) GetClicktrackers() []string {
	if m != nil {
		return m.Clicktrackers
	}
	return nil
}

func init() {
	proto.RegisterEnum("xiaodu.BidRequest_Imp_SlotType", BidRequest_Imp_SlotType_name, BidRequest_Imp_SlotType_value)
	proto.RegisterEnum("xiaodu.BidRequest_Imp_BidInfo_BidType", BidRequest_Imp_BidInfo_BidType_name, BidRequest_Imp_BidInfo_BidType_value)
	proto.RegisterEnum("xiaodu.BidRequest_Imp_Banner_SlotType", BidRequest_Imp_Banner_SlotType_name, BidRequest_Imp_Banner_SlotType_value)
	proto.RegisterEnum("xiaodu.BidRequest_Imp_Video_SlotType", BidRequest_Imp_Video_SlotType_name, BidRequest_Imp_Video_SlotType_value)
	proto.RegisterEnum("xiaodu.BidRequest_Imp_Video_VideoLinearity", BidRequest_Imp_Video_VideoLinearity_name, BidRequest_Imp_Video_VideoLinearity_value)
	proto.RegisterEnum("xiaodu.BidRequest_Imp_Native_Asset_Image_ImageAssetType", BidRequest_Imp_Native_Asset_Image_ImageAssetType_name, BidRequest_Imp_Native_Asset_Image_ImageAssetType_value)
	proto.RegisterEnum("xiaodu.BidRequest_Imp_Native_Asset_Data_DataAssetType", BidRequest_Imp_Native_Asset_Data_DataAssetType_name, BidRequest_Imp_Native_Asset_Data_DataAssetType_value)
	proto.RegisterEnum("xiaodu.BidRequest_Device_DeviceType", BidRequest_Device_DeviceType_name, BidRequest_Device_DeviceType_value)
	proto.RegisterEnum("xiaodu.BidRequest_Device_ConnectionType", BidRequest_Device_ConnectionType_name, BidRequest_Device_ConnectionType_value)
	proto.RegisterEnum("xiaodu.BidRequest_Device_Geo_LocationType", BidRequest_Device_Geo_LocationType_name, BidRequest_Device_Geo_LocationType_value)
}
